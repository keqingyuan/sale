<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation=" http://www.springframework.org/schema/beans 
                        http://www.springframework.org/schema/beans/spring-beans.xsd 
                        http://www.springframework.org/schema/mvc 
                        http://www.springframework.org/schema/mvc/spring-mvc.xsd ">

	<!-- 扩充了注解驱动，可以将请求参数绑定到控制器参数 -->
	<mvc:annotation-driven />
	
	<!-- 跨域请求 -->
	<mvc:cors>
		<mvc:mapping path="/**" allowed-origins="*" />
		<!-- <mvc:mapping path="/resources/**" allowed-origins="http://domain1.com" 
			/> -->
	</mvc:cors>
	
	<!-- 静态资源配置 -->
	<mvc:resources location="/resourcess/**" mapping="/webapp/resources/" />
	
	<!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
	<bean id="mappingJackson2HttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
				<value>text/json;charset=UTF-8</value>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJackson2HttpMessageConverter" />
			</list>
		</property>
	</bean>
	
	<!-- 时间转化，数字转化成数字类型, customObjectMapper代码实现 -->
	<!-- <mvc:annotation-driven> <mvc:message-converters> <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"> 
		<property name="objectMapper"> <bean class="com.fasterxml.jackson.databind.ObjectMapper"> 
		<property name="dateFormat"> <bean class="java.text.SimpleDateFormat"> <constructor-arg 
		type="java.lang.String" value="yyyy-MM-dd HH:mm:ss" /> </bean> </property> 
		</bean> </property> </bean> </mvc:message-converters> </mvc:annotation-driven> -->
	<bean id="customObjectMapper" class="org.qingyuan.sale.core.config.CustomObjectMapper" />
	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter" />
			<bean
				class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
			<bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="objectMapper" ref="customObjectMapper" />
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 默认编码 -->
		<property name="defaultEncoding" value="utf-8" />
		<!-- 文件大小最大值 -->
		<property name="maxUploadSize" value="10485760000" />
		<!-- 内存中的最大值 -->
		<property name="maxInMemorySize" value="40960" />
	</bean>

	<!-- 定义跳转的文件的前后缀 ，视图模式配置 -->
<!-- 	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址
		<property name="prefix" value="/webapp/resources/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean> -->

	<!-- 配置ViewResolver，可用多个ViewResolver，使用order属性排序， InternalResourceViewResolver 
		放在最后 -->
<!-- 	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="order" value="1"></property>
		<property name="defaultViews">
			<list>
				ModelAndView里的数据变成JSON
				<bean
					class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />
			</list>
		</property>
		<property name="ignoreAcceptHeader" value="true"></property>
	</bean> -->
</beans>